{"version":3,"sources":["Square/index.js","Board/index.js","Game/index.js","App.js","index.js"],"names":["Square","value","winPosition","handleClick","className","onClick","Board","x","useState","Array","fill","squares","setSquares","xIsNext","setXIsNext","setWinPosition","renderSquare","i","newSquares","calculateWinner","useEffect","coordinate","lines","length","a","b","c","getCoordinate","newCoordinate","draw","status","winner","Game","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7eb2e535.chunk.js","sourcesContent":["import './index.css';\nexport default function Square({value, winPosition,handleClick}) {\n    return (\n        \n        <button className = { winPosition ? 'win-position':'square'}   onClick={handleClick}>{value}</button>\n    );\n}","import { useState, useEffect } from 'react';\nimport './index.css';\nimport Square from '../Square';\nexport default function Board() {\n\n    const x = useState(Array(9).fill(null));\n    const squares = x[0];\n    const setSquares = x[1];\n\n    const [xIsNext, setXIsNext] = useState(true);\n    const [winPosition, setWinPosition] = useState(Array(9).fill(false));\n    function handleClick(i) {\n        const newSquares = [...squares];\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        newSquares[i] = xIsNext ? 'X' : '0';\n        setSquares(newSquares);\n        setXIsNext(!xIsNext);\n    }\n    useEffect(() => {\n        if (calculateWinner(squares) || squares[i]) {\n            const coordinate = getCoordinate(squares);\n            const newCoordinate = Array(9).fill(false);\n            for (var i = 0; i < 3; i++) {\n                newCoordinate[coordinate[i]] = true;\n            }\n            setWinPosition(newCoordinate);\n        }\n\n    }, squares)\n\n\n    function renderSquare(i, winPosition) {\n        return <Square value={squares[i]} winPosition={winPosition} handleClick={() => { handleClick(i) }} />;\n    }\n    var draw = true;\n    for (var i = 0; i < squares.length; i++) {\n        if (squares[i] === null) {\n            draw = false;\n        }\n    }\n    const winner = calculateWinner(squares);\n    let status;\n    if (winner) {\n        status = 'Winner: ' + winner;\n    }\n    else if (draw) {\n        status = 'Game Draw';\n    }\n    else {\n        status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n    }\n\n    return (\n        <div className='board'>\n            <div className='status'>\n                {status}\n            </div>\n            <div className='board-row'>\n                {renderSquare(0, winPosition[0])}\n                {renderSquare(1, winPosition[1])}\n                {renderSquare(2, winPosition[2])}\n            </div>\n\n            <div className='board-row'>\n                {renderSquare(3, winPosition[3])}\n                {renderSquare(4, winPosition[4])}\n                {renderSquare(5, winPosition[5])}\n            </div>\n\n            <div className='board-row'>\n                {renderSquare(6, winPosition[6])}\n                {renderSquare(7, winPosition[7])}\n                {renderSquare(8, winPosition[8])}\n            </div>\n            {(winner || draw) && (\n                <div><button className='reset' onClick={() => {\n                    setSquares(Array(9).fill(null));\n                    setWinPosition(Array(9).fill(false));\n                }\n                }>Reset</button></div>)\n            }\n        </div>\n    );\n    function calculateWinner(squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return squares[a];\n            }\n        }\n        return null;\n    }\n    function getCoordinate(squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return [a, b, c];\n            }\n        }\n    }\n}","import React from 'react'\nimport Board from '../Board';\nimport './index.css';\nexport default function Game(){\n    return(\n       <div className ='game'>\n           <div className='game-board'>\n               <Board/>\n           </div>\n       </div>\n    );\n}","import Game from './Game';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}