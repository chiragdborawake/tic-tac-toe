[{"/home/study/Desktop/React/tic-tac-toe/src/index.js":"1","/home/study/Desktop/React/tic-tac-toe/src/reportWebVitals.js":"2","/home/study/Desktop/React/tic-tac-toe/src/App.js":"3","/home/study/Desktop/React/tic-tac-toe/src/Game/index.js":"4","/home/study/Desktop/React/tic-tac-toe/src/Board/index.js":"5","/home/study/Desktop/React/tic-tac-toe/src/Square/index.js":"6"},{"size":177,"mtime":1612076030451,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1612075011435,"results":"9","hashOfConfig":"10"},{"size":154,"mtime":1612076069731,"results":"11","hashOfConfig":"8"},{"size":257,"mtime":1612244080826,"results":"12","hashOfConfig":"8"},{"size":3637,"mtime":1612325329884,"results":"13","hashOfConfig":"8"},{"size":229,"mtime":1612201989999,"results":"14","hashOfConfig":"8"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"2dfjp1",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"54hruz",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/study/Desktop/React/tic-tac-toe/src/index.js",[],["29","30"],"/home/study/Desktop/React/tic-tac-toe/src/reportWebVitals.js",[],"/home/study/Desktop/React/tic-tac-toe/src/App.js",[],"/home/study/Desktop/React/tic-tac-toe/src/Game/index.js",[],"/home/study/Desktop/React/tic-tac-toe/src/Board/index.js",["31","32","33"],"import { useState, useEffect } from 'react';\nimport './index.css';\nimport Square from '../Square';\nexport default function Board() {\n\n    const x = useState(Array(9).fill(null));\n    const squares = x[0];\n    const setSquares = x[1];\n\n    const [xIsNext, setXIsNext] = useState(true);\n    const [winPosition, setWinPosition] = useState(Array(9).fill(false));\n    function handleClick(i) {\n        const newSquares = [...squares];\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        newSquares[i] = xIsNext ? 'X' : '0';\n        setSquares(newSquares);\n        setXIsNext(!xIsNext);\n    }\n    useEffect(() => {\n        if (calculateWinner(squares) || squares[i]) {\n            const coordinate = getCoordinate(squares);\n            const newCoordinate = Array(9).fill(false);\n            for (var i = 0; i < 3; i++) {\n                newCoordinate[coordinate[i]] = true;\n            }\n            setWinPosition(newCoordinate);\n        }\n\n    }, squares)\n\n\n    function renderSquare(i, winPosition) {\n        return <Square value={squares[i]} winPosition={winPosition} handleClick={() => { handleClick(i) }} />;\n    }\n    var draw = true;\n    for (var i = 0; i < squares.length; i++) {\n        if (squares[i] === null) {\n            draw = false;\n        }\n    }\n    const winner = calculateWinner(squares);\n    let status;\n    if (winner) {\n        status = 'Winner: ' + winner;\n    }\n    else if (draw) {\n        status = 'Game Draw';\n    }\n    else {\n        status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n    }\n\n    return (\n        <div className='board'>\n            <div className='status'>\n                {status}\n            </div>\n            <div className='board-row'>\n                {renderSquare(0, winPosition[0])}\n                {renderSquare(1, winPosition[1])}\n                {renderSquare(2, winPosition[2])}\n            </div>\n\n            <div className='board-row'>\n                {renderSquare(3, winPosition[3])}\n                {renderSquare(4, winPosition[4])}\n                {renderSquare(5, winPosition[5])}\n            </div>\n\n            <div className='board-row'>\n                {renderSquare(6, winPosition[6])}\n                {renderSquare(7, winPosition[7])}\n                {renderSquare(8, winPosition[8])}\n            </div>\n            {(winner || draw) && (\n                <div><button className='reset' onClick={() => {\n                    setSquares(Array(9).fill(null));\n                    setWinPosition(Array(9).fill(false));\n                }\n                }>Reset</button></div>)\n            }\n        </div>\n    );\n    function calculateWinner(squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return squares[a];\n            }\n        }\n        return null;\n    }\n    function getCoordinate(squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return [a, b, c];\n            }\n        }\n    }\n}","/home/study/Desktop/React/tic-tac-toe/src/Square/index.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":22,"column":49,"nodeType":"40","messageId":"41","endLine":22,"endColumn":50},{"ruleId":"42","severity":1,"message":"43","line":31,"column":8,"nodeType":"40","endLine":31,"endColumn":15},{"ruleId":"42","severity":1,"message":"44","line":31,"column":8,"nodeType":"40","endLine":31,"endColumn":15,"suggestions":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-use-before-define","'i' was used before it was defined.","Identifier","usedBeforeDefined","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'squares'. Either include it or remove the dependency array.",["48"],"no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [squares]",{"range":"51","text":"52"},[984,991],"[squares]"]